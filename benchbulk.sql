with rej as (
	insert into foo(merge, b, c)
	values
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo'),
	(1000 * random(), 5, 'foofoofoo')
	on duplicate key lock for update returning rejects *)
update foo set c = rej.c from rej where foo.merge = rej.merge;
